{
    "@id": "urn:marel:sensorx:machine:1",
    "@type": "Interface",
    "displayName": "Machine",
    "contents": [
        {
            "@type": ["Telemetry", "SemanticType/Temperature"],
            "name": "cabinetTemperature",
            "displayName": "Cabinet Temperature",
            "displayUnit": "C",
            "unit": "Units/Temperature/celsius",
            "schema": "double"
        },
        {
            "@type": ["Telemetry", "SemanticType/Temperature"],
            "name": "upperCabinetTemperature",
            "displayName": "Upper Cabinet Temperature",
            "displayUnit": "C",
            "unit": "Units/Temperature/celsius",
            "schema": "double"
        },
        {
            "@type": "Telemetry",
            "name": "uptime",
            "displayName": "Uptime",
            "displayUnit": "s",
            "schema": "integer"
        },
        {
            "@type": [
                "Telemetry",
                "SemanticType/Marel/Event"
            ],
            "name": "productData",
            "displayName": "Product Data",
            "schema": {
                "@type": "Object",
                "fields": [
                    {
                        "name": "productPixelCount",
                        "displayName": "Product Pixel Count",
                        "schema": "integer"
                    },
                    {
                        "name": "productThicknessAtContaminant",
                        "displayName": "Product Thickness At Contaminant (cm)",
                        "schema": "double"
                    },
                    {
                        "name": "productThickness",
                        "displayName": "Product Thickness",
                        "schema": "double"
                    },
                    {
                        "name": "angle",
                        "displayName": "Angle",
                        "schema": "double"
                    },
                    {
                        "name": "laneId",
                        "displayName": "Lane Identifier",
                        "schema": "integer"
                    },
                    {
                        "name": "contaminantPixelCount",
                        "displayName": "Contaminant Pixel Count",
                        "schema": "integer"
                    },
                    {
                        "name": "filename",
                        "displayName": "File Name",
                        "schema": "integer"
                    },
                    {
                        "name": "weight",
                        "displayName": "Weight",
                        "schema": "double"
                    },
                    {
                        "name": "meatPercentage",
                        "displayName": "Meat Percentage",
                        "schema": "double"
                    },
                    {
                        "name": "rejected",
                        "displayName": "Rejected",
                        "schema": "boolean"
                    },
                    {
                        "name": "contaminant",
                        "displayName": "Contaminant",
                        "schema": {
                            "@type": "Enum",
                            "valueSchema": "integer",
                            "enumValues": [
                                {
                                    "name": "none",
                                    "displayName": "None",
                                    "enumValue": 0
                                },
                                {
                                    "name": "bone",
                                    "displayName": "Bone",
                                    "enumValue": 2
                                },
                                {
                                    "name": "hardContaminant",
                                    "displayName": "Hard Contaminant",
                                    "enumValue": 3
                                }
                            ]
                        }
                    },
                    {
                        "name": "outOfBounds",
                        "displayName": "Out Of Bounds",
                        "schema": {
                            "@type": "Enum",
                            "valueSchema": "integer",
                            "enumValues": [
                                {
                                    "name": "none",
                                    "displayName": "None",
                                    "enumValue": 0
                                },
                                {
                                    "name": "back",
                                    "displayName": "Back",
                                    "enumValue": 1
                                },
                                {
                                    "name": "front",
                                    "displayName": "Front",
                                    "enumValue": 2
                                },
                                {
                                    "name": "both",
                                    "displayName": "Both",
                                    "enumValue": 3
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "@type": [
                "Telemetry",
                "SemanticType/Marel/Event"
            ],
            "name": "programLane1Changed",
            "displayName": "Program Lane 1 Changed",
            "schema": "integer",
            "displayUnit": "program #"
        },
        {
            "@type": [
                "Telemetry",
                "SemanticType/Marel/Event"
            ],
            "name": "programLane2Changed",
            "displayName": "Program Lane 2 Changed",
            "schema": "integer",
            "displayUnit": "program #"
        },
        {
            "@type": [
                "Telemetry",
                "SemanticType/Marel/Event"
            ],
            "name": "programLane3Changed",
            "displayName": "Program Lane 3 Changed",
            "schema": "integer",
            "displayUnit": "program #"
        }
    ],
    "@context": "http://azureiot.com/v1/contexts/IoTModel.json"
}
